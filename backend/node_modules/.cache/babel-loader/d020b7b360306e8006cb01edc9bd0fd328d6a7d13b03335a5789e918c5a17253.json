{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\", \"onItemClick\", \"skipAnimation\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { area as d3Area } from 'd3-shape';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { AreaElement } from './AreaElement';\nimport { getValueToPositionMapper } from '../hooks/useScale';\nimport getCurveFactory from '../internals/getCurve';\nimport { DEFAULT_X_AXIS_KEY } from '../constants';\nimport { useChartGradient } from '../internals/components/ChartsAxesGradients';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useAggregatedData = () => {\n  const seriesData = React.useContext(SeriesContext).line;\n  const axisData = React.useContext(CartesianContext);\n  if (seriesData === undefined) {\n    return [];\n  }\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  return stackingGroups.flatMap(({\n    ids: groupIds\n  }) => {\n    return [...groupIds].reverse() // Revert stacked area for a more pleasant animation\n    .map(seriesId => {\n      const {\n        xAxisKey = defaultXAxisId,\n        yAxisKey = defaultYAxisId,\n        stackedData,\n        data,\n        connectNulls\n      } = series[seriesId];\n      const xScale = getValueToPositionMapper(xAxis[xAxisKey].scale);\n      const yScale = yAxis[yAxisKey].scale;\n      const xData = xAxis[xAxisKey].data;\n      const gradientUsed = yAxis[yAxisKey].colorScale && [yAxisKey, 'y'] || xAxis[xAxisKey].colorScale && [xAxisKey, 'x'] || undefined;\n      if (process.env.NODE_ENV !== 'production') {\n        if (xData === undefined) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should have data property to be able to display a line plot.`);\n        }\n        if (xData.length < stackedData.length) {\n          throw new Error(`MUI X Charts: The data length of the x axis (${xData.length} items) is lower than the length of series (${stackedData.length} items).`);\n        }\n      }\n      const areaPath = d3Area().x(d => xScale(d.x)).defined((_, i) => connectNulls || data[i] != null).y0(d => d.y && yScale(d.y[0])).y1(d => d.y && yScale(d.y[1]));\n      const curve = getCurveFactory(series[seriesId].curve);\n      const formattedData = xData?.map((x, index) => ({\n        x,\n        y: stackedData[index]\n      })) ?? [];\n      const d3Data = connectNulls ? formattedData.filter((_, i) => data[i] != null) : formattedData;\n      const d = areaPath.curve(curve)(d3Data) || '';\n      return _extends({}, series[seriesId], {\n        gradientUsed,\n        d,\n        seriesId\n      });\n    });\n  });\n};\n\n/**\n * Demos:\n *\n * - [Lines](https://mui.com/x/react-charts/lines/)\n * - [Areas demonstration](https://mui.com/x/react-charts/areas-demo/)\n * - [Stacking](https://mui.com/x/react-charts/stacking/)\n *\n * API:\n *\n * - [AreaPlot API](https://mui.com/x/api/charts/area-plot/)\n */\nfunction AreaPlot(props) {\n  const {\n      slots,\n      slotProps,\n      onItemClick,\n      skipAnimation\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const getGradientId = useChartGradient();\n  const completedData = useAggregatedData();\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: completedData.map(({\n      d,\n      seriesId,\n      color,\n      area,\n      gradientUsed\n    }) => !!area && /*#__PURE__*/_jsx(AreaElement, {\n      id: seriesId,\n      d: d,\n      color: color,\n      gradientId: gradientUsed && getGradientId(...gradientUsed),\n      slots: slots,\n      slotProps: slotProps,\n      onClick: onItemClick && (event => onItemClick(event, {\n        type: 'line',\n        seriesId\n      })),\n      skipAnimation: skipAnimation\n    }, seriesId))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? AreaPlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback fired when a line area item is clicked.\n   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.\n   * @param {LineItemIdentifier} lineItemIdentifier The line item identifier.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * If `true`, animations are skipped.\n   * @default false\n   */\n  skipAnimation: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { AreaPlot };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","area","d3Area","SeriesContext","CartesianContext","AreaElement","getValueToPositionMapper","getCurveFactory","DEFAULT_X_AXIS_KEY","useChartGradient","jsx","_jsx","useAggregatedData","seriesData","useContext","line","axisData","undefined","series","stackingGroups","xAxis","yAxis","xAxisIds","yAxisIds","defaultXAxisId","defaultYAxisId","flatMap","ids","groupIds","reverse","map","seriesId","xAxisKey","yAxisKey","stackedData","data","connectNulls","xScale","scale","yScale","xData","gradientUsed","colorScale","process","env","NODE_ENV","Error","length","areaPath","x","d","defined","_","i","y0","y","y1","curve","formattedData","index","d3Data","filter","AreaPlot","props","slots","slotProps","onItemClick","skipAnimation","other","getGradientId","completedData","children","color","id","gradientId","onClick","event","type","propTypes","func","bool","object"],"sources":["D:/Visualization Dashboard/my-app/node_modules/@mui/x-charts/esm/LineChart/AreaPlot.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\", \"onItemClick\", \"skipAnimation\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { area as d3Area } from 'd3-shape';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { AreaElement } from './AreaElement';\nimport { getValueToPositionMapper } from '../hooks/useScale';\nimport getCurveFactory from '../internals/getCurve';\nimport { DEFAULT_X_AXIS_KEY } from '../constants';\nimport { useChartGradient } from '../internals/components/ChartsAxesGradients';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useAggregatedData = () => {\n  const seriesData = React.useContext(SeriesContext).line;\n  const axisData = React.useContext(CartesianContext);\n  if (seriesData === undefined) {\n    return [];\n  }\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  return stackingGroups.flatMap(({\n    ids: groupIds\n  }) => {\n    return [...groupIds].reverse() // Revert stacked area for a more pleasant animation\n    .map(seriesId => {\n      const {\n        xAxisKey = defaultXAxisId,\n        yAxisKey = defaultYAxisId,\n        stackedData,\n        data,\n        connectNulls\n      } = series[seriesId];\n      const xScale = getValueToPositionMapper(xAxis[xAxisKey].scale);\n      const yScale = yAxis[yAxisKey].scale;\n      const xData = xAxis[xAxisKey].data;\n      const gradientUsed = yAxis[yAxisKey].colorScale && [yAxisKey, 'y'] || xAxis[xAxisKey].colorScale && [xAxisKey, 'x'] || undefined;\n      if (process.env.NODE_ENV !== 'production') {\n        if (xData === undefined) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should have data property to be able to display a line plot.`);\n        }\n        if (xData.length < stackedData.length) {\n          throw new Error(`MUI X Charts: The data length of the x axis (${xData.length} items) is lower than the length of series (${stackedData.length} items).`);\n        }\n      }\n      const areaPath = d3Area().x(d => xScale(d.x)).defined((_, i) => connectNulls || data[i] != null).y0(d => d.y && yScale(d.y[0])).y1(d => d.y && yScale(d.y[1]));\n      const curve = getCurveFactory(series[seriesId].curve);\n      const formattedData = xData?.map((x, index) => ({\n        x,\n        y: stackedData[index]\n      })) ?? [];\n      const d3Data = connectNulls ? formattedData.filter((_, i) => data[i] != null) : formattedData;\n      const d = areaPath.curve(curve)(d3Data) || '';\n      return _extends({}, series[seriesId], {\n        gradientUsed,\n        d,\n        seriesId\n      });\n    });\n  });\n};\n\n/**\n * Demos:\n *\n * - [Lines](https://mui.com/x/react-charts/lines/)\n * - [Areas demonstration](https://mui.com/x/react-charts/areas-demo/)\n * - [Stacking](https://mui.com/x/react-charts/stacking/)\n *\n * API:\n *\n * - [AreaPlot API](https://mui.com/x/api/charts/area-plot/)\n */\nfunction AreaPlot(props) {\n  const {\n      slots,\n      slotProps,\n      onItemClick,\n      skipAnimation\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const getGradientId = useChartGradient();\n  const completedData = useAggregatedData();\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: completedData.map(({\n      d,\n      seriesId,\n      color,\n      area,\n      gradientUsed\n    }) => !!area && /*#__PURE__*/_jsx(AreaElement, {\n      id: seriesId,\n      d: d,\n      color: color,\n      gradientId: gradientUsed && getGradientId(...gradientUsed),\n      slots: slots,\n      slotProps: slotProps,\n      onClick: onItemClick && (event => onItemClick(event, {\n        type: 'line',\n        seriesId\n      })),\n      skipAnimation: skipAnimation\n    }, seriesId))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? AreaPlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback fired when a line area item is clicked.\n   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.\n   * @param {LineItemIdentifier} lineItemIdentifier The line item identifier.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * If `true`, animations are skipped.\n   * @default false\n   */\n  skipAnimation: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { AreaPlot };"],"mappings":"AAAA,OAAOA,6BAA6B,MAAM,yDAAyD;AACnG,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,MAAMC,SAAS,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,aAAa,EAAE,eAAe,CAAC;AACxE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,IAAIC,MAAM,QAAQ,UAAU;AACzC,SAASC,aAAa,QAAQ,kCAAkC;AAChE,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,wBAAwB,QAAQ,mBAAmB;AAC5D,OAAOC,eAAe,MAAM,uBAAuB;AACnD,SAASC,kBAAkB,QAAQ,cAAc;AACjD,SAASC,gBAAgB,QAAQ,6CAA6C;AAC9E,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,UAAU,GAAGd,KAAK,CAACe,UAAU,CAACX,aAAa,CAAC,CAACY,IAAI;EACvD,MAAMC,QAAQ,GAAGjB,KAAK,CAACe,UAAU,CAACV,gBAAgB,CAAC;EACnD,IAAIS,UAAU,KAAKI,SAAS,EAAE;IAC5B,OAAO,EAAE;EACX;EACA,MAAM;IACJC,MAAM;IACNC;EACF,CAAC,GAAGN,UAAU;EACd,MAAM;IACJO,KAAK;IACLC,KAAK;IACLC,QAAQ;IACRC;EACF,CAAC,GAAGP,QAAQ;EACZ,MAAMQ,cAAc,GAAGF,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAMG,cAAc,GAAGF,QAAQ,CAAC,CAAC,CAAC;EAClC,OAAOJ,cAAc,CAACO,OAAO,CAAC,CAAC;IAC7BC,GAAG,EAAEC;EACP,CAAC,KAAK;IACJ,OAAO,CAAC,GAAGA,QAAQ,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;IAAA,CAC9BC,GAAG,CAACC,QAAQ,IAAI;MACf,MAAM;QACJC,QAAQ,GAAGR,cAAc;QACzBS,QAAQ,GAAGR,cAAc;QACzBS,WAAW;QACXC,IAAI;QACJC;MACF,CAAC,GAAGlB,MAAM,CAACa,QAAQ,CAAC;MACpB,MAAMM,MAAM,GAAG/B,wBAAwB,CAACc,KAAK,CAACY,QAAQ,CAAC,CAACM,KAAK,CAAC;MAC9D,MAAMC,MAAM,GAAGlB,KAAK,CAACY,QAAQ,CAAC,CAACK,KAAK;MACpC,MAAME,KAAK,GAAGpB,KAAK,CAACY,QAAQ,CAAC,CAACG,IAAI;MAClC,MAAMM,YAAY,GAAGpB,KAAK,CAACY,QAAQ,CAAC,CAACS,UAAU,IAAI,CAACT,QAAQ,EAAE,GAAG,CAAC,IAAIb,KAAK,CAACY,QAAQ,CAAC,CAACU,UAAU,IAAI,CAACV,QAAQ,EAAE,GAAG,CAAC,IAAIf,SAAS;MAChI,IAAI0B,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACzC,IAAIL,KAAK,KAAKvB,SAAS,EAAE;UACvB,MAAM,IAAI6B,KAAK,CAAC,iBAAiBd,QAAQ,KAAKxB,kBAAkB,GAAG,mBAAmB,GAAG,uBAAuBwB,QAAQ,GAAG,+DAA+D,CAAC;QAC7L;QACA,IAAIQ,KAAK,CAACO,MAAM,GAAGb,WAAW,CAACa,MAAM,EAAE;UACrC,MAAM,IAAID,KAAK,CAAC,gDAAgDN,KAAK,CAACO,MAAM,+CAA+Cb,WAAW,CAACa,MAAM,UAAU,CAAC;QAC1J;MACF;MACA,MAAMC,QAAQ,GAAG9C,MAAM,CAAC,CAAC,CAAC+C,CAAC,CAACC,CAAC,IAAIb,MAAM,CAACa,CAAC,CAACD,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKjB,YAAY,IAAID,IAAI,CAACkB,CAAC,CAAC,IAAI,IAAI,CAAC,CAACC,EAAE,CAACJ,CAAC,IAAIA,CAAC,CAACK,CAAC,IAAIhB,MAAM,CAACW,CAAC,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,EAAE,CAACN,CAAC,IAAIA,CAAC,CAACK,CAAC,IAAIhB,MAAM,CAACW,CAAC,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9J,MAAME,KAAK,GAAGlD,eAAe,CAACW,MAAM,CAACa,QAAQ,CAAC,CAAC0B,KAAK,CAAC;MACrD,MAAMC,aAAa,GAAGlB,KAAK,EAAEV,GAAG,CAAC,CAACmB,CAAC,EAAEU,KAAK,MAAM;QAC9CV,CAAC;QACDM,CAAC,EAAErB,WAAW,CAACyB,KAAK;MACtB,CAAC,CAAC,CAAC,IAAI,EAAE;MACT,MAAMC,MAAM,GAAGxB,YAAY,GAAGsB,aAAa,CAACG,MAAM,CAAC,CAACT,CAAC,EAAEC,CAAC,KAAKlB,IAAI,CAACkB,CAAC,CAAC,IAAI,IAAI,CAAC,GAAGK,aAAa;MAC7F,MAAMR,CAAC,GAAGF,QAAQ,CAACS,KAAK,CAACA,KAAK,CAAC,CAACG,MAAM,CAAC,IAAI,EAAE;MAC7C,OAAO/D,QAAQ,CAAC,CAAC,CAAC,EAAEqB,MAAM,CAACa,QAAQ,CAAC,EAAE;QACpCU,YAAY;QACZS,CAAC;QACDnB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS+B,QAAQA,CAACC,KAAK,EAAE;EACvB,MAAM;MACFC,KAAK;MACLC,SAAS;MACTC,WAAW;MACXC;IACF,CAAC,GAAGJ,KAAK;IACTK,KAAK,GAAGxE,6BAA6B,CAACmE,KAAK,EAAEjE,SAAS,CAAC;EACzD,MAAMuE,aAAa,GAAG5D,gBAAgB,CAAC,CAAC;EACxC,MAAM6D,aAAa,GAAG1D,iBAAiB,CAAC,CAAC;EACzC,OAAO,aAAaD,IAAI,CAAC,GAAG,EAAEd,QAAQ,CAAC,CAAC,CAAC,EAAEuE,KAAK,EAAE;IAChDG,QAAQ,EAAED,aAAa,CAACxC,GAAG,CAAC,CAAC;MAC3BoB,CAAC;MACDnB,QAAQ;MACRyC,KAAK;MACLvE,IAAI;MACJwC;IACF,CAAC,KAAK,CAAC,CAACxC,IAAI,IAAI,aAAaU,IAAI,CAACN,WAAW,EAAE;MAC7CoE,EAAE,EAAE1C,QAAQ;MACZmB,CAAC,EAAEA,CAAC;MACJsB,KAAK,EAAEA,KAAK;MACZE,UAAU,EAAEjC,YAAY,IAAI4B,aAAa,CAAC,GAAG5B,YAAY,CAAC;MAC1DuB,KAAK,EAAEA,KAAK;MACZC,SAAS,EAAEA,SAAS;MACpBU,OAAO,EAAET,WAAW,KAAKU,KAAK,IAAIV,WAAW,CAACU,KAAK,EAAE;QACnDC,IAAI,EAAE,MAAM;QACZ9C;MACF,CAAC,CAAC,CAAC;MACHoC,aAAa,EAAEA;IACjB,CAAC,EAAEpC,QAAQ,CAAC;EACd,CAAC,CAAC,CAAC;AACL;AACAY,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGiB,QAAQ,CAACgB,SAAS,GAAG;EAC3D;EACA;EACA;EACA;EACA;AACF;AACA;AACA;AACA;EACEZ,WAAW,EAAElE,SAAS,CAAC+E,IAAI;EAC3B;AACF;AACA;AACA;EACEZ,aAAa,EAAEnE,SAAS,CAACgF,IAAI;EAC7B;AACF;AACA;AACA;EACEf,SAAS,EAAEjE,SAAS,CAACiF,MAAM;EAC3B;AACF;AACA;AACA;EACEjB,KAAK,EAAEhE,SAAS,CAACiF;AACnB,CAAC,GAAG,KAAK,CAAC;AACV,SAASnB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}