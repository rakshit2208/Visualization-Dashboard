{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkScaleErrors = checkScaleErrors;\nvar _constants = require(\"../constants\");\nvar _axis = require(\"../models/axis\");\nconst getAxisMessage = (axisDirection, axisKey) => {\n  const axisName = `${axisDirection}-axis`;\n  const axisKeyName = `${axisDirection}Axis`;\n  const axisDefaultKey = axisDirection === 'x' ? _constants.DEFAULT_X_AXIS_KEY : _constants.DEFAULT_Y_AXIS_KEY;\n  return axisKey === axisDefaultKey ? `The first \\`${axisKeyName}\\`` : `The ${axisName} with id \"${axisKey}\"`;\n};\nfunction checkScaleErrors(verticalLayout, seriesId, xAxisKey, xAxis, yAxisKey, yAxis) {\n  const xAxisConfig = xAxis[xAxisKey];\n  const yAxisConfig = yAxis[yAxisKey];\n  const discreteAxisConfig = verticalLayout ? xAxisConfig : yAxisConfig;\n  const continuousAxisConfig = verticalLayout ? yAxisConfig : xAxisConfig;\n  const discreteAxisKey = verticalLayout ? xAxisKey : yAxisKey;\n  const continuousAxisKey = verticalLayout ? yAxisKey : xAxisKey;\n  const discreteAxisDirection = verticalLayout ? 'x' : 'y';\n  const continuousAxisDirection = verticalLayout ? 'y' : 'x';\n  if (!(0, _axis.isBandScaleConfig)(discreteAxisConfig)) {\n    throw new Error(`MUI X Charts: ${getAxisMessage(discreteAxisDirection, discreteAxisKey)} should be of type \"band\" to display the bar series of id \"${seriesId}\".`);\n  }\n  if (discreteAxisConfig.data === undefined) {\n    throw new Error(`MUI X Charts: ${getAxisMessage(discreteAxisDirection, discreteAxisKey)} should have data property.`);\n  }\n  if ((0, _axis.isBandScaleConfig)(continuousAxisConfig) || (0, _axis.isPointScaleConfig)(continuousAxisConfig)) {\n    throw new Error(`MUI X Charts: ${getAxisMessage(continuousAxisDirection, continuousAxisKey)} should be a continuous type to display the bar series of id \"${seriesId}\".`);\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","checkScaleErrors","_constants","require","_axis","getAxisMessage","axisDirection","axisKey","axisName","axisKeyName","axisDefaultKey","DEFAULT_X_AXIS_KEY","DEFAULT_Y_AXIS_KEY","verticalLayout","seriesId","xAxisKey","xAxis","yAxisKey","yAxis","xAxisConfig","yAxisConfig","discreteAxisConfig","continuousAxisConfig","discreteAxisKey","continuousAxisKey","discreteAxisDirection","continuousAxisDirection","isBandScaleConfig","Error","data","undefined","isPointScaleConfig"],"sources":["D:/Visualization Dashboard/my-app/node_modules/@mui/x-charts/BarChart/checkScaleErrors.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkScaleErrors = checkScaleErrors;\nvar _constants = require(\"../constants\");\nvar _axis = require(\"../models/axis\");\nconst getAxisMessage = (axisDirection, axisKey) => {\n  const axisName = `${axisDirection}-axis`;\n  const axisKeyName = `${axisDirection}Axis`;\n  const axisDefaultKey = axisDirection === 'x' ? _constants.DEFAULT_X_AXIS_KEY : _constants.DEFAULT_Y_AXIS_KEY;\n  return axisKey === axisDefaultKey ? `The first \\`${axisKeyName}\\`` : `The ${axisName} with id \"${axisKey}\"`;\n};\nfunction checkScaleErrors(verticalLayout, seriesId, xAxisKey, xAxis, yAxisKey, yAxis) {\n  const xAxisConfig = xAxis[xAxisKey];\n  const yAxisConfig = yAxis[yAxisKey];\n  const discreteAxisConfig = verticalLayout ? xAxisConfig : yAxisConfig;\n  const continuousAxisConfig = verticalLayout ? yAxisConfig : xAxisConfig;\n  const discreteAxisKey = verticalLayout ? xAxisKey : yAxisKey;\n  const continuousAxisKey = verticalLayout ? yAxisKey : xAxisKey;\n  const discreteAxisDirection = verticalLayout ? 'x' : 'y';\n  const continuousAxisDirection = verticalLayout ? 'y' : 'x';\n  if (!(0, _axis.isBandScaleConfig)(discreteAxisConfig)) {\n    throw new Error(`MUI X Charts: ${getAxisMessage(discreteAxisDirection, discreteAxisKey)} should be of type \"band\" to display the bar series of id \"${seriesId}\".`);\n  }\n  if (discreteAxisConfig.data === undefined) {\n    throw new Error(`MUI X Charts: ${getAxisMessage(discreteAxisDirection, discreteAxisKey)} should have data property.`);\n  }\n  if ((0, _axis.isBandScaleConfig)(continuousAxisConfig) || (0, _axis.isPointScaleConfig)(continuousAxisConfig)) {\n    throw new Error(`MUI X Charts: ${getAxisMessage(continuousAxisDirection, continuousAxisKey)} should be a continuous type to display the bar series of id \"${seriesId}\".`);\n  }\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB;AAC3C,IAAIC,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIC,KAAK,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACrC,MAAME,cAAc,GAAGA,CAACC,aAAa,EAAEC,OAAO,KAAK;EACjD,MAAMC,QAAQ,GAAG,GAAGF,aAAa,OAAO;EACxC,MAAMG,WAAW,GAAG,GAAGH,aAAa,MAAM;EAC1C,MAAMI,cAAc,GAAGJ,aAAa,KAAK,GAAG,GAAGJ,UAAU,CAACS,kBAAkB,GAAGT,UAAU,CAACU,kBAAkB;EAC5G,OAAOL,OAAO,KAAKG,cAAc,GAAG,eAAeD,WAAW,IAAI,GAAG,OAAOD,QAAQ,aAAaD,OAAO,GAAG;AAC7G,CAAC;AACD,SAASN,gBAAgBA,CAACY,cAAc,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,KAAK,EAAE;EACpF,MAAMC,WAAW,GAAGH,KAAK,CAACD,QAAQ,CAAC;EACnC,MAAMK,WAAW,GAAGF,KAAK,CAACD,QAAQ,CAAC;EACnC,MAAMI,kBAAkB,GAAGR,cAAc,GAAGM,WAAW,GAAGC,WAAW;EACrE,MAAME,oBAAoB,GAAGT,cAAc,GAAGO,WAAW,GAAGD,WAAW;EACvE,MAAMI,eAAe,GAAGV,cAAc,GAAGE,QAAQ,GAAGE,QAAQ;EAC5D,MAAMO,iBAAiB,GAAGX,cAAc,GAAGI,QAAQ,GAAGF,QAAQ;EAC9D,MAAMU,qBAAqB,GAAGZ,cAAc,GAAG,GAAG,GAAG,GAAG;EACxD,MAAMa,uBAAuB,GAAGb,cAAc,GAAG,GAAG,GAAG,GAAG;EAC1D,IAAI,CAAC,CAAC,CAAC,EAAET,KAAK,CAACuB,iBAAiB,EAAEN,kBAAkB,CAAC,EAAE;IACrD,MAAM,IAAIO,KAAK,CAAC,iBAAiBvB,cAAc,CAACoB,qBAAqB,EAAEF,eAAe,CAAC,8DAA8DT,QAAQ,IAAI,CAAC;EACpK;EACA,IAAIO,kBAAkB,CAACQ,IAAI,KAAKC,SAAS,EAAE;IACzC,MAAM,IAAIF,KAAK,CAAC,iBAAiBvB,cAAc,CAACoB,qBAAqB,EAAEF,eAAe,CAAC,6BAA6B,CAAC;EACvH;EACA,IAAI,CAAC,CAAC,EAAEnB,KAAK,CAACuB,iBAAiB,EAAEL,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAElB,KAAK,CAAC2B,kBAAkB,EAAET,oBAAoB,CAAC,EAAE;IAC7G,MAAM,IAAIM,KAAK,CAAC,iBAAiBvB,cAAc,CAACqB,uBAAuB,EAAEF,iBAAiB,CAAC,iEAAiEV,QAAQ,IAAI,CAAC;EAC3K;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}