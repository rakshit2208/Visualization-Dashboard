{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"slots\", \"slotProps\", \"skipAnimation\", \"onItemClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { MarkElement } from './MarkElement';\nimport { getValueToPositionMapper } from '../hooks/useScale';\nimport { useChartId } from '../hooks/useChartId';\nimport { DEFAULT_X_AXIS_KEY } from '../constants';\nimport { cleanId } from '../internals/utils';\nimport getColor from './getColor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Demos:\n *\n * - [Lines](https://mui.com/x/react-charts/lines/)\n * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)\n *\n * API:\n *\n * - [MarkPlot API](https://mui.com/x/api/charts/mark-plot/)\n */\nfunction MarkPlot(props) {\n  const {\n      slots,\n      slotProps,\n      skipAnimation,\n      onItemClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const seriesData = React.useContext(SeriesContext).line;\n  const axisData = React.useContext(CartesianContext);\n  const chartId = useChartId();\n  const Mark = slots?.mark ?? MarkElement;\n  if (seriesData === undefined) {\n    return null;\n  }\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: stackingGroups.flatMap(({\n      ids: groupIds\n    }) => {\n      return groupIds.map(seriesId => {\n        const {\n          xAxisKey = defaultXAxisId,\n          yAxisKey = defaultYAxisId,\n          stackedData,\n          data,\n          showMark = true\n        } = series[seriesId];\n        if (showMark === false) {\n          return null;\n        }\n        const xScale = getValueToPositionMapper(xAxis[xAxisKey].scale);\n        const yScale = yAxis[yAxisKey].scale;\n        const xData = xAxis[xAxisKey].data;\n        const xRange = xAxis[xAxisKey].scale.range();\n        const yRange = yScale.range();\n        const isInRange = ({\n          x,\n          y\n        }) => {\n          if (x < Math.min(...xRange) || x > Math.max(...xRange)) {\n            return false;\n          }\n          if (y < Math.min(...yRange) || y > Math.max(...yRange)) {\n            return false;\n          }\n          return true;\n        };\n        if (xData === undefined) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should have data property to be able to display a line plot.`);\n        }\n        const clipId = cleanId(`${chartId}-${seriesId}-line-clip`); // We assume that if displaying line mark, the line will also be rendered\n\n        const colorGetter = getColor(series[seriesId], xAxis[xAxisKey], yAxis[yAxisKey]);\n        return /*#__PURE__*/_jsx(\"g\", {\n          clipPath: `url(#${clipId})`,\n          children: xData?.map((x, index) => {\n            const value = data[index] == null ? null : stackedData[index][1];\n            return {\n              x: xScale(x),\n              y: value === null ? null : yScale(value),\n              position: x,\n              value,\n              index\n            };\n          }).filter(({\n            x,\n            y,\n            index,\n            position,\n            value\n          }) => {\n            if (value === null || y === null) {\n              // Remove missing data point\n              return false;\n            }\n            if (!isInRange({\n              x,\n              y\n            })) {\n              // Remove out of range\n              return false;\n            }\n            if (showMark === true) {\n              return true;\n            }\n            return showMark({\n              x,\n              y,\n              index,\n              position,\n              value\n            });\n          }).map(({\n            x,\n            y,\n            index\n          }) => {\n            return /*#__PURE__*/_jsx(Mark, _extends({\n              id: seriesId,\n              dataIndex: index,\n              shape: \"circle\",\n              color: colorGetter(index),\n              x: x,\n              y: y // Don't know why TS doesn't get from the filter that y can't be null\n              ,\n\n              skipAnimation: skipAnimation,\n              onClick: onItemClick && (event => onItemClick(event, {\n                type: 'line',\n                seriesId,\n                dataIndex: index\n              }))\n            }, slotProps?.mark), `${seriesId}-${index}`);\n          })\n        }, seriesId);\n      });\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? MarkPlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback fired when a line mark item is clicked.\n   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.\n   * @param {LineItemIdentifier} lineItemIdentifier The line mark item identifier.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * If `true`, animations are skipped.\n   * @default false\n   */\n  skipAnimation: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { MarkPlot };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","SeriesContext","CartesianContext","MarkElement","getValueToPositionMapper","useChartId","DEFAULT_X_AXIS_KEY","cleanId","getColor","jsx","_jsx","MarkPlot","props","slots","slotProps","skipAnimation","onItemClick","other","seriesData","useContext","line","axisData","chartId","Mark","mark","undefined","series","stackingGroups","xAxis","yAxis","xAxisIds","yAxisIds","defaultXAxisId","defaultYAxisId","children","flatMap","ids","groupIds","map","seriesId","xAxisKey","yAxisKey","stackedData","data","showMark","xScale","scale","yScale","xData","xRange","range","yRange","isInRange","x","y","Math","min","max","Error","clipId","colorGetter","clipPath","index","value","position","filter","id","dataIndex","shape","color","onClick","event","type","process","env","NODE_ENV","propTypes","func","bool","object"],"sources":["D:/Visualization Dashboard/my-app/node_modules/@mui/x-charts/esm/LineChart/MarkPlot.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"slots\", \"slotProps\", \"skipAnimation\", \"onItemClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { MarkElement } from './MarkElement';\nimport { getValueToPositionMapper } from '../hooks/useScale';\nimport { useChartId } from '../hooks/useChartId';\nimport { DEFAULT_X_AXIS_KEY } from '../constants';\nimport { cleanId } from '../internals/utils';\nimport getColor from './getColor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Demos:\n *\n * - [Lines](https://mui.com/x/react-charts/lines/)\n * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)\n *\n * API:\n *\n * - [MarkPlot API](https://mui.com/x/api/charts/mark-plot/)\n */\nfunction MarkPlot(props) {\n  const {\n      slots,\n      slotProps,\n      skipAnimation,\n      onItemClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const seriesData = React.useContext(SeriesContext).line;\n  const axisData = React.useContext(CartesianContext);\n  const chartId = useChartId();\n  const Mark = slots?.mark ?? MarkElement;\n  if (seriesData === undefined) {\n    return null;\n  }\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: stackingGroups.flatMap(({\n      ids: groupIds\n    }) => {\n      return groupIds.map(seriesId => {\n        const {\n          xAxisKey = defaultXAxisId,\n          yAxisKey = defaultYAxisId,\n          stackedData,\n          data,\n          showMark = true\n        } = series[seriesId];\n        if (showMark === false) {\n          return null;\n        }\n        const xScale = getValueToPositionMapper(xAxis[xAxisKey].scale);\n        const yScale = yAxis[yAxisKey].scale;\n        const xData = xAxis[xAxisKey].data;\n        const xRange = xAxis[xAxisKey].scale.range();\n        const yRange = yScale.range();\n        const isInRange = ({\n          x,\n          y\n        }) => {\n          if (x < Math.min(...xRange) || x > Math.max(...xRange)) {\n            return false;\n          }\n          if (y < Math.min(...yRange) || y > Math.max(...yRange)) {\n            return false;\n          }\n          return true;\n        };\n        if (xData === undefined) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should have data property to be able to display a line plot.`);\n        }\n        const clipId = cleanId(`${chartId}-${seriesId}-line-clip`); // We assume that if displaying line mark, the line will also be rendered\n\n        const colorGetter = getColor(series[seriesId], xAxis[xAxisKey], yAxis[yAxisKey]);\n        return /*#__PURE__*/_jsx(\"g\", {\n          clipPath: `url(#${clipId})`,\n          children: xData?.map((x, index) => {\n            const value = data[index] == null ? null : stackedData[index][1];\n            return {\n              x: xScale(x),\n              y: value === null ? null : yScale(value),\n              position: x,\n              value,\n              index\n            };\n          }).filter(({\n            x,\n            y,\n            index,\n            position,\n            value\n          }) => {\n            if (value === null || y === null) {\n              // Remove missing data point\n              return false;\n            }\n            if (!isInRange({\n              x,\n              y\n            })) {\n              // Remove out of range\n              return false;\n            }\n            if (showMark === true) {\n              return true;\n            }\n            return showMark({\n              x,\n              y,\n              index,\n              position,\n              value\n            });\n          }).map(({\n            x,\n            y,\n            index\n          }) => {\n            return /*#__PURE__*/_jsx(Mark, _extends({\n              id: seriesId,\n              dataIndex: index,\n              shape: \"circle\",\n              color: colorGetter(index),\n              x: x,\n              y: y // Don't know why TS doesn't get from the filter that y can't be null\n              ,\n              skipAnimation: skipAnimation,\n              onClick: onItemClick && (event => onItemClick(event, {\n                type: 'line',\n                seriesId,\n                dataIndex: index\n              }))\n            }, slotProps?.mark), `${seriesId}-${index}`);\n          })\n        }, seriesId);\n      });\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? MarkPlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback fired when a line mark item is clicked.\n   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.\n   * @param {LineItemIdentifier} lineItemIdentifier The line mark item identifier.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * If `true`, animations are skipped.\n   * @default false\n   */\n  skipAnimation: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { MarkPlot };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}